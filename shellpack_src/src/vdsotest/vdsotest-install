#!/bin/bash
###SHELLPACK preamble vdsotest-install 0
GIT_LOCATION=https://github.com/nathanlynch/vdsotest.git
#MIRROR_LOCATION="$WEBROOT/vdsotest/"

install-depends automake autoconf

###SHELLPACK parseargBegin
###SHELLPACK parseargEnd

###SHELLPACK git_fetch vdsotest-${VERSION}.tar.gz vdsotest-${VERSION}-installed
###SHELLPACK self_extract namecollision.patch

###SHELLPACK build_start vdsotest-${VERSION}-installed
cat $SHELLPACK_TEMP/namecollision.patch | patch -p1 || die "Failed to patch vdsotest for getcpu"

./autogen.sh && sed -i -e 's/LT_INIT\(disable-static\)//' configure && ./configure

###SHELLPACK make

echo vdsotest installed successfully
exit $SHELLPACK_SUCCESS

==== BEGIN namecollision.patch ====
--- a/src/getcpu.c
+++ b/src/getcpu.c
@@ -39,7 +39,7 @@ static bool vdso_has_getcpu(void)
 	return getcpu_vdso != NULL;
 }
 
-static int getcpu_syscall_wrapper(unsigned *cpu, unsigned *node, void *tcache)
+static int vdsotest_getcpu_syscall_wrapper(unsigned *cpu, unsigned *node, void *tcache)
 {
 	return syscall(SYS_getcpu, cpu, node, tcache);
 }
@@ -48,7 +48,7 @@ static void getcpu_syscall_nofail(unsigned *cpu, unsigned *node, void *tcache)
 {
 	int err;
 
-	err = getcpu_syscall_wrapper(cpu, node, tcache);
+	err = vdsotest_getcpu_syscall_wrapper(cpu, node, tcache);
 	if (err)
 		error(EXIT_FAILURE, errno, "SYS_getcpu");
 }
@@ -101,7 +101,7 @@ static void getcpu_bench(struct ctx *ctx, struct bench_results *res)
 	BENCH(ctx, sched_getcpu(),
 	      &res->libc_interval);
 
-	BENCH(ctx, getcpu_syscall_wrapper(&cpu, NULL, NULL),
+	BENCH(ctx, vdsotest_getcpu_syscall_wrapper(&cpu, NULL, NULL),
 	      &res->sys_interval);
 }
 
@@ -250,7 +250,7 @@ static void do_getcpu(void *arg, struct syscall_result *res)
 
 	syscall_prepare();
 	if (args->force_syscall) {
-		err = getcpu_syscall_wrapper(args->cpu, args->node,
+		err = vdsotest_getcpu_syscall_wrapper(args->cpu, args->node,
 					     args->tcache);
 	} else {
 		err = getcpu_vdso(args->cpu, args->node, args->tcache);
==== END namecollision.patch ====
